apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.oss.licenses.plugin'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "jlelse.rocket"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
    }

    dexOptions {
        preDexLibraries true
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
        }
    }

}

dependencies {
    compile 'com.github.bumptech.glide:glide:4.2.0'
    compile 'com.davemorrissey.labs:subsampling-scale-image-view:3.6.0'

    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support:customtabs:26.1.0'
    compile 'com.android.support:design:26.1.0'
    compile 'com.android.support:cardview-v7:26.1.0'
    compile 'com.android.support:recyclerview-v7:26.1.0'

    compile 'com.airbnb.android:lottie:2.2.5'
    compile 'com.android.support:support-v4:26.1.0'

    annotationProcessor 'com.github.bumptech.glide:compiler:4.2.0'
}

// -------------------------------------------------------------------------------------------------
// Generate blocklists
// -------------------------------------------------------------------------------------------------

def blockListOutputDir = 'src/webkit/res/raw'

task buildBlocklists(type:Copy) {
    from('../shavar-prod-lists') {
        include '*.json'
    }
    into blockListOutputDir

    // Android can't handle dashes in the filename, so we need to rename:
    rename 'disconnect-blacklist.json', 'blocklist.json'
    rename 'disconnect-entitylist.json', 'entitylist.json'
    // google_mapping.json already has an expected name
}

clean.doLast {
    file(blockListOutputDir).deleteDir()
}

tasks.whenTaskAdded { task ->
    def name = task.name
    if (name.contains("generate") && name.contains("Config") && name.contains("Webkit")) {
        task.dependsOn buildBlocklists
    }
}